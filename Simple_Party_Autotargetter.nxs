{"type":"group","name":"Simple_Party_Autotargetter","enabled":true,"id":1,"items":[{"type":"group","name":"Group Targetting","enabled":true,"id":161,"items":[{"type":"alias","name":"Set Target","enabled":true,"id":165,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nreporting = get_variable(\"partyReporting\");\nsend_command(\"settarget \"+args[1]);\nif (reporting == true) {\n    send_command(\"pt Target \"+args[1]);\n}"}],"text":"^st (\\w+)$","items":[]},{"type":"alias","name":"Set Party Leader","enabled":true,"id":162,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script\npartyLeader = args[1].toLowerCase();\nset_variable(\"pLeader\", partyLeader);\ndisplay_notice(\"Party Leader is now: \"+partyLeader, \"Orange\", \"Black\");"}],"text":"^spl (\\w+)$","items":[]},{"type":"alias","name":"Clear Party Leader","enabled":true,"id":164,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nset_variable(\"pLeader\", \"none\");\ndisplay_notice(\"Party Leader has been cleared.\", \"Orange\", \"Black\");"}],"text":"cpl","items":[]},{"type":"trigger","name":"Third Person Set Party Leader","enabled":true,"id":163,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(Party): (\\w+) says, \"(\\w+) is calling targets.\"$","actions":[{"action":"script","script":"//Enter the script here\npartyLeader = args[2].toLowerCase();\nset_variable(\"pLeader\", partyLeader);\ndisplay_notice(\"Party Leader is now: \"+partyLeader, \"Orange\", \"Black\");"}],"items":[]},{"type":"trigger","name":"Auto-target Set","enabled":true,"id":166,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^\\(Party\\): (\\w+) says, \"(Target:|TARGET:|Target|TARGET|Targeting:|Target changed to|Target changed to:) (\\w+).\"$","actions":[{"action":"script","script":"//Enter the script here\npartyLeader = get_variable(\"pLeader\");\nspeaker = args[1].toLowerCase();\nif (speaker == partyLeader) {\n    send_command(\"settarget \"+args[3]);\n}\n\nreporting = get_variable(\"partyReporting\");\nif (reporting == true) {\n    send_command(\"pt Now targeting \"+args[3]);\n}"}],"items":[]},{"type":"alias","name":"Toggle Party Target Reporting","enabled":true,"id":167,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\ntoggle = args[1];\nif (toggle == \"pon\") {\n    set_variable(\"partyReporting\", true);\n    display_notice(\"Now echoing targets to party\", \"Lawngreen\");\n} else if (toggle == \"po\") {\n    set_variable(\"partyReporting\", false);\n    display_notice(\"Stopped echoing targets to party\", \"Lawngreen\");\n}"}],"text":"^(pon|po)$","items":[]}],"actions":[]}],"description":"Exported reflexes: Simple_Party_Autotargetter"}